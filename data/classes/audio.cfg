{
#-------------------------- sound effects --------------------------#
	play: "def(custom_obj obj,  string sound_name, SoundOptions|null options=null) ->commands
		obj.audio.sound(sound_name, options).play()
	",

	reverb: "def(custom_obj obj, string sound_name) ->commands
		map(range(16), obj.audio.sound(sound_name, {
			pos: -if(value = 0, 0.0, 0.01 + value*0.005),
			volume: 1.0 / (1.5^value),
			filters: [
				obj.audio.speed_filter({
					speed: if(index = 0, 1.0, 0.98),
				})
			],
		}).play())
	",


#-------------------------- music functions --------------------------#
	// This is the current music that will play in the absence of any other music.
	current_looping_music: { type: "null|string" },

	/*
		Start playing a musical track. If this is set to loop, it will be set as the current permanent music in current_looping_music, otherwise, once it is finished, the music will revert to the 'normal' music track specified in current_looping_music.
	*/
	play_music: "def(custom_obj obj, string track, [enum { music_once } ] flags=[]) ->commands
	[
		obj.audio.music(track, {
			on_complete: if(once, def()->commands resume_music(obj)),
			loop: if(once, false, true),
			loop_point: settings.loop_point,
			loop_from: settings.loop_from,
			volume: 1.0 * settings.volume
		}
		where settings = find_or_die(music_settings, value.name = track)
		).play(),

		if(not once,
			set(current_looping_music, track),
		)
	] where once = enum music_once in flags
	",

	// Resumes playing whatever music is in current_looping_music.
	resume_music: "def(custom_obj obj) ->commands
		if(current_looping_music is string, play_music(obj, current_looping_music))
	",
	
#-------------------------- music static data --------------------------#
	music_settings: {
		type: "[{
					name:	string,
					volume:	decimal,
					loop_point:	null|decimal,
					loop_from:	null|decimal,
				}]",
		init: "[{
					name:	string,
					volume:	decimal,
					loop_point:	null|decimal,
					loop_from:	null|decimal,
				}]
				<- get_document('data/music_settings.cfg', [])",
		//change: "write_document('data/music_settings.cfg', _data)",
	}
	
}
